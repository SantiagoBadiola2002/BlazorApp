@page "/salaEspera"
@rendermode InteractiveServer
@using BlazorApp.Models
@using BlazorApp.Models.Interfaces
@inject IOficinaRepository OficinaRepository

<!-- RadzenStack para agrupar los elementos verticalmente -->
<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" Gap="0.5rem" class="rz-p-2">
    <!-- Selección de oficina -->
    <RadzenDropDown @bind-Value="@selectedOficinaId"
                    Data="@oficinas"
                    TextProperty="Nombre"
                    ValueProperty="Id"
                    Style="width: 100%; max-width: 400px;"
                    Name="DropDownBindValue"
                    Placeholder="Seleccione una oficina"
                    Change="@((args) => CargarClientesEnEspera())" />



    <!-- Mostrar mensaje si no se selecciona una oficina -->
    @if (selectedOficinaId == 0)
    {
        <p>Seleccione una oficina para ver los clientes en espera.</p>
    }
    else
    {
        <!-- Mensaje si no hay clientes en espera -->
        @if (clientesEnEspera == null || clientesEnEspera.Count == 0)
        {
            <p>No hay clientes en espera para la oficina seleccionada.</p>
        }
        else
        {
            <!-- Lista de clientes -->
            <RadzenDataList AllowVirtualization="@allowVirtualization"
                            Style="@(allowVirtualization ? "height:400px;overflow:auto;" : "")"
                            WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"
                            Data="@clientesEnEspera" TItem="Cliente" PageSize="5" ShowPagingSummary="true">
                <Template Context="cliente">
                    <RadzenCard Variant="Variant.Outlined" class="rz-p-0" Style="width: 100%; overflow: hidden;">
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="12" SizeLG="4" class="rz-p-4 product-title">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-on-secondary-lighter">Cliente Cédula: @(cliente.Cedula)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeLG="4" class="rz-p-4">
                                <RadzenRow Gap="0">
                                    <RadzenColumn Size="12">
                                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-mb-0">Fecha Registro</RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2">@(cliente.FechaRegistro.ToString("yyyy-MM-dd"))</RadzenText>
                                    </RadzenColumn>
                                    <RadzenColumn Size="12">
                                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-mb-0">Estado</RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2">@cliente.Estado.ToString()</RadzenText>
                                    </RadzenColumn>
                                </RadzenRow>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        }
    }
</RadzenStack>

@code {
    private List<Oficina> oficinas = new List<Oficina>();
    private List<Cliente> clientesEnEspera = new List<Cliente>();
    private int selectedOficinaId = 0; // Inicializa a 0 para representar "no seleccionado"
    private bool allowVirtualization = false; // Control para virtualización

    protected override async Task OnInitializedAsync()
    {
        oficinas = await OficinaRepository.ObtenerTodasLasOficinasAsync();
    }

    private async Task CargarClientesEnEspera()
    {
        if (selectedOficinaId > 0)
        {
            clientesEnEspera = await OficinaRepository.ObtenerClientesEnEsperaPorOficinaAsync(selectedOficinaId);
        }
        else
        {
            clientesEnEspera.Clear();
        }
    }
}

<style>
    .product-title {
        min-height: 72px;
        background-color: var(--rz-secondary-lighter);
    }
</style>
