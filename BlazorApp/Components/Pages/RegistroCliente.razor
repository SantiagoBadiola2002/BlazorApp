@page "/registroCliente"
@rendermode InteractiveServer
@using BlazorApp.Models
@using BlazorApp.Models.Interfaces
@using BlazorApp.Models.BaseDeDatos
@using Microsoft.EntityFrameworkCore

@inject ContextoBD contextBd
@inject IClienteRepository ClienteRepository

<h3>Registro de Cliente</h3>

@if (oficinas == null || oficinas.Count == 0)
{
    <p><em>Cargando oficinas...</em></p>
}
else
{
    <div class="rz-p-0 rz-p-md-12">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Style="border: var(--rz-grid-cell-border);">
            <RadzenDropDown @bind-Value=@selectedOficinaId
                            Data=@oficinas
                            TextProperty="Nombre"
                            ValueProperty="Id"
                            Style="width: 100%; max-width: 400px;"
                            Name="DropDownBindValue"
                            Placeholder="Seleccione una oficina" />
            <RadzenTextBox @bind-Value="cedula" Placeholder="Ingrese su cédula" Style="width: 20%;" />
            <RadzenButton Text="Registrar" Click="@RegistrarCliente" Disabled="@(string.IsNullOrEmpty(cedula) || selectedOficinaId == 0)" />

        </RadzenStack>
    </div>
}

<p>@resultado</p>

@code {
    private List<Oficina> oficinas;
    private int selectedOficinaId;
    private string cedula;
    private string resultado;

    protected override async Task OnInitializedAsync()
    {
        // Usar contextBd para obtener las oficinas directamente de la base de datos
        oficinas = await contextBd.Oficinas.ToListAsync();
        if (oficinas != null && oficinas.Count > 0)
        {
            Console.WriteLine($"Se han cargado {oficinas.Count} oficinas.");
            foreach (var oficina in oficinas)
            {
                Console.WriteLine($"Oficina: {oficina.Nombre}, ID: {oficina.Id}");
            }
        }
        else
        {
            Console.WriteLine("No se encontraron oficinas.");
        }

        StateHasChanged(); // Forzamos el renderizado
    }

    private void RegistrarCliente()
    {
        var oficina = oficinas.FirstOrDefault(o => o.Id == selectedOficinaId);
        if (oficina != null)
        {
            var nuevoCliente = new Cliente(cedula);
            ClienteRepository.AgregarCliente(nuevoCliente);
            oficina.ClientesEnEspera.Add(nuevoCliente);
            resultado = "Cliente registrado exitosamente en la oficina " + oficina.Nombre;
        }
        else
        {
            resultado = "Error al registrar cliente. Oficina no encontrada.";
        }
    }
}
